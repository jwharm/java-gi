name: Build GTK

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Upload artifacts as release'
        required: true
        type: boolean
        default: true
      gtktag:
        description: 'The GTK tag to clone'
        required: true
      libadwaitatag:
        description: 'The libadwaita tag to clone'
        required: true

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Clone
        uses: actions/checkout@v5
        with:
          submodules: recursive
          path: scripts
          sparse-checkout: |
            .github
      - name: Install Dependencies
        run: |
          choco uninstall -y mingw strawberryperl cmake.install llvm
          pip install meson ninja
      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64
      - name: Clone pkgconf
        uses: actions/checkout@v5
        with:
          repository: 'pkgconf/pkgconf'
          submodules: recursive
          path: pkgconf
      - name: Build pkgconf
        run: |
          meson setup pkgconf\build pkgconf --prefix ${{ github.workspace }}\pkgdist -Dtests=disabled --vsenv
          meson compile -C pkgconf\build
          meson install -C pkgconf\build
          cp pkgdist\bin\pkgconf.exe pkgdist\bin\pkg-config.exe
          echo "${{ github.workspace }}\pkgdist\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Download winflexbison and gettext
        run: |
          curl -L https://github.com/lexxmark/winflexbison/releases/download/v2.5.25/win_flex_bison-2.5.25.zip -o win_flex_bison.zip
          7z x win_flex_bison.zip -owin_flex_bison
          echo "${{ github.workspace }}\win_flex_bison"  | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          curl -L https://github.com/mlocati/gettext-iconv-windows/releases/download/v0.23-v1.17/gettext0.23-iconv1.17-static-64.zip -o gettext.zip
          7z x gettext.zip -ogettext
          echo "${{ github.workspace }}\gettext\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Clone GTK tree
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.gtktag }}
          repository: 'GNOME/gtk'
          submodules: recursive
          path: gtk
      - name: Build GTK
        run: |
          meson setup gtk\build gtk --pkg-config-path ${{ github.workspace }}\dist\lib\pkgconfig --build.pkg-config-path ${{ github.workspace }}\dist\lib\pkgconfig --prefix ${{ github.workspace }}\dist --buildtype release --vsenv -Db_pie=true -Dbuild-tests=false -Dmedia-gstreamer=disabled -Dvulkan=disabled
          meson compile -C gtk\build
          meson install -C gtk\build
          cd dist\bin
          python ${{ github.workspace }}\scripts\.github\getdeps.py
          7z a ..\..\natives.zip java-gi-meta-v1.txt *.dll
          7z a ..\..\executable.zip *.exe
          cd ..\..
          cp natives.zip natives-gtk.zip
          cp executable.zip executable-gtk.zip
          echo "${{ github.workspace }}\dist\bin"  | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Clone gobject-introspection
        uses: actions/checkout@v5
        with:
          repository: 'GNOME/gobject-introspection'
          submodules: recursive
          path: gobject-introspection
      - name: Build gobject-introspection
        run: |
          meson setup gobject-introspection\build gobject-introspection --prefix ${{ github.workspace }}\dist --buildtype release --vsenv -Db_pie=true -Dglib2:introspection=enabled
          meson compile -C gobject-introspection\build
          meson install -C gobject-introspection\build
      - name: Clone libadwaita tree
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.libadwaitatag }}
          repository: 'GNOME/libadwaita'
          submodules: recursive
          path: libadwaita
      - name: Build libadwaita
        run: |
          git -C libadwaita apply ${{ github.workspace }}/scripts/.github/libadwaita-appstream.diff
          meson setup libadwaita\build libadwaita --pkg-config-path ${{ github.workspace }}\dist\lib\pkgconfig --build.pkg-config-path ${{ github.workspace }}\dist\lib\pkgconfig --prefix ${{ github.workspace }}\dist --buildtype release --vsenv -Db_pie=true -Dvapi=false -Dexamples=false -Dtests=false -Dintrospection=disabled
          meson compile -C libadwaita\build
          meson install -C libadwaita\build
          cd dist\bin
          python ${{ github.workspace }}\scripts\.github\getdeps.py
          7z a ..\..\natives-adw.zip java-gi-meta-v1.txt *.dll
          7z a ..\..\executable-adw.zip *.exe
          cd ..\..
      - name: Finish up
        run: |
          cp pkgdist\bin\pkg-config.exe pkg-config.exe
      - name: Library artifact
        uses: actions/upload-artifact@v5
        with:
          name: libraries
          path: |
            dist\bin\*.dll
      - name: Application artifact
        uses: actions/upload-artifact@v5
        with:
          name: applications
          path: |
            dist\bin\*.exe
            pkg-config.exe
      - name: Generate Release
        uses: softprops/action-gh-release@v2
        if: ${{ inputs.release }}
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag_name: "libraries"
          name: "Natives for GTK ${{ inputs.gtktag }} and libadwaita ${{ inputs.libadwaitatag }}"
          files: |
            natives.zip
            executable.zip
            natives-gtk.zip
            executable-gtk.zip
            natives-adw.zip
            executable-adw.zip
            pkg-config.exe
